<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0;netstandard2.1</TargetFrameworks>
    <Version>2.4.0</Version>
    <AssemblyName>Senparc.NeuChar</AssemblyName>
    <RootNamespace>Senparc.NeuChar</RootNamespace>
    <!--<FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35'">$(Net35FrameworkPathOverride)</FrameworkPathOverride>-->
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Description>
			NeuChar SDK 跨平台信息交互标准

		</Description>
    <Copyright>Senparc Copyright © 2004~2023</Copyright>
    <PackageTags>NeuChar,Standard,json,yaml,xml</PackageTags>
    <Authors>Jeffrey Su</Authors>
    <Owners>Senparc</Owners>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <ProjectUrl>https://github.com/Senparc/NeuChar</ProjectUrl>
    <Title>Senparc.NeuChar.dll</Title>
    <Summary>NeuChar 跨平台信息交互标准 for C#</Summary>
    <PackageProjectUrl>https://github.com/Senparc/NeuChar</PackageProjectUrl>
    <PackageIcon>icon.jpg</PackageIcon>
    <PackageReleaseNotes>
			v0.0.1 完成和微信公众号平台消息接口对接
			v0.0.2 完成从 Senparc.Weixin 移植 MessageHandler 标准
			v0.0.3 支持 CO2NET v0.2.10
			v0.0.5 重构 MessageHandler
			v0.0.6 添加接口调用
			v0.0.6.10 修复 EntityHelper.FillEntityWithXml() 方法对只读对象的过滤
			v0.0.7 添加 PlatformType 枚举，以及 IEnlighten 接口
			v0.0.8 添加News响应消息接口及处理
			v0.0.9 添加 ApiBindAttribute，对 API 进行绑定操作

			v0.1.0 提供自定义 API 绑定功能
			v0.1.3 取消 SuccessResponseMessageBase 抽象属性
			v0.1.4 1、将 MessageEntityEnlightener 设为抽象类
			2、fix bug：MessageHandlerNode.Execute() 的 accessTokenOrApi 参数输入 null 会抛错

			v0.2.0 重构标准结构，可加载素材数据库（MeterialData）
			v0.2.2 添加 ArticleData.cs
			v0.2.3 更新图文响应
			v0.2.4 添加图片链接和详情链接
			v0.2.5 添加 MenuButtonType 枚举类型
			v0.2.6 支持 菜单点击事件和素材引用；添加 RequestMessageEvent 基类
			v0.2.7 改进图文消息回复
			v0.2.8 添加 NeuChar 服务器有效性检验
			v0.2.9 优化多图文处理
			v0.2.10
			1、提供 NeuChar 服务器连接检测能力
			2、升级 ApiBind
			v0.2.11 MessageHandler 设置 postModel 为必须提供的参数

			v0.3.0 添加 APP 订阅信息
			v0.3.1 重构 MessageHandler，提供 App 订阅优先执行功能
			v0.3.2 支持小程序自动转换公众号的News为Text回复消息

			v0.4.0 添加 APM 部分监测功能
			v0.4.1 重构 MessageHandler，抽象方法 Execute() 重命名为 ExecuteHandler()，外层执行方法仍然为 Execute()
			v0.4.3 添加 MessageHandler.SaveRequestMessageLog() 和 MessageHandler.SaveResponseMessageLog() 方法，用于便捷储存消息记录）
			v0.5.0 使用 .NETStandard2.0 统一支持 .NET Core，放弃对 .NET Core 1.x 的单独适配
			v0.5.1 支持 CO2NET v0.4.2
			v0.5.4 完善异步 MessageHandler
			v0.6.0
			1、添加 PullNeuCharAppConfig 消息类型
			2、支持 CO2NET v0.5.0 提供对 .NET Core Console 的全面支持
			v0.6.2 支持 CO2NET.APM v0.2.5
			v0.6.2.1 修正 NeuChar 官方地址协议（https）
			v0.6.3 提供选择菜单（对应微信 SendMenu 接口）的 Request 处理方式
			v0.6.4 方法中添加对 SelectMenuId 是否为空的判断
			v0.6.8
			1、优化 Register.RegisterApiBind() 方法
			2、添加 ApiBindInfoCollection.GetGroupedCollection() 方法
			v0.6.9 使用 .ConfigureAwait(false) 避免异步锁死的情况
			v0.7.0 停止对 .NET3.5/4.0 的支持
			v0.7.2 添加 ApiUtility
			v0.7.3 FillEntityWithXml()方法添加 "ThirdFasteRegisterInfo" 类型: 开放平台-小程序-快速注册
			v0.7.5 使用最新版本 CO2NET
			v0.7.6 使用最新版本 CO2NET
			v0.8.0 提供支持分布式缓存的消息上下文（MessageContext）
			v0.8.1
			1、提供支持分布式缓存的消息上下文（MessageContext）
			2、将 IMessageContext 接口中 TRequest、TResponse 约束为 class
			3、IMessageContext 接口添加 GetRequestEntityMappingResult() 和 GetResponseEntityMappingResult() 方法
			4、 提供带符号的 nuget 包（.snupkg)
			v1.0.100
			1、使用最新版本 CO2NET，支持 .NET Core 3.0
			2、修复 MessageContext.GetRequestEntityMappingResult() 方法可能出现的空值情况
			v1.0.102
			1、优化 EntityHelper.FillEntityWithXml&lt;T&gt;() 方法
		2、支持新版本 CO2NET
		3、提供 MessageHandler 中间件
		4、MessageAgent.RequestXml() 方法增加 autoFillUrlParameters 参数
		v1.0.103 支持新版本 CO2NET
		v1.0.104 优化 MessageHandler 同步方法兼容策略
		v1.2.200 更新 Agents.RequestXml() 方法
		v1.2.200.6 MessageHandler 添加 RecordResponseMessageSync 属性，用于设置是否同步向 MessageContext 写入 ResponseMessage，默认为否，将使用队列写入，提升响应速度
		v1.2.201 MASSSENDJOBFINISH 事件增加 ArticleUrlResult 节点
		v1.3.100 消息去重放入到 ExecuteAsync() 方法中处理
		v1.3.201
		1、MessageHandler MarkRepeatedMessage() 方法添加 cancelExecute 参数，默认为 true
		2、消息去重增加对特殊 CreateTime 情况的判断 https://github.com/Senparc/NeuChar/issues/121
		3、增加服务号订阅通知事件Entity
		v1.4.100.9 添加 RequestMessageMiniProgramPage 一系列类型和接口
		v1.5 使用重构后的 API 引擎
		v1.6
		1、优化事件去重缓存key和企业微信事件去重bug
		2、新增任务卡片被动回复消息
		v2.0.1 SaveRequestMessageLog()、SaveResponseMessageLog() 升级异步写日志方法
		v2.1.1 添加 article_id 菜单类型
		v2.1.7 优化基础库
		v2.1.7.2 重写 ApiBind 的 Ignore
		v2.1.8 处理公众号消息发布后的发布结果接收事件
		v2.2.0 支持多租户 NeuCharRoot
		v2.3.0 添加文本长度限制自动处理方案
		v2.3.2 完善 ResponseMessage 类型自动获取机制，兼容企业微信无返回消息类型处理
		v2.4.0 升级基础库，适配 .NET 8.0
	</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Senparc/NeuChar</RepositoryUrl>
    <Configurations>Debug;Release;Test</Configurations>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <OutputPath>..\..\BuildOutPut</OutputPath>
    <DefineConstants>TRACE;RELEASE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>..\..\BuildOutPut</OutputPath>
    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
    <DocumentationFile>..\..\BuildOutPut\Senparc.NeuChar.xml</DocumentationFile>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net462|AnyCPU'">
    <OutputPath>..\..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\..\BuildOutPut\net462\Senparc.NeuChar.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|AnyCPU'">
    <OutputPath>..\..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\..\BuildOutPut\netstandard2.0\Senparc.NeuChar.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.1|AnyCPU'">
    <OutputPath>..\..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\..\BuildOutPut\netstandard2.1\Senparc.NeuChar.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include=".\icon.jpg" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Entities\WeChat\**" />
    <Compile Remove="Exceptions\Middleware\**" />
    <EmbeddedResource Remove="Entities\WeChat\**" />
    <EmbeddedResource Remove="Exceptions\Middleware\**" />
    <None Remove="Entities\WeChat\**" />
    <None Remove="Exceptions\Middleware\**" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="BaseModel.cs" />
    <Compile Remove="DataEngine.cs" />
  </ItemGroup>
  <!--<ItemGroup>
    <Reference Include="System.ComponentModel.Annotations">
      <HintPath>C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.netcore.app\2.0.0\ref\netcoreapp2.0\System.ComponentModel.Annotations.dll</HintPath>
    </Reference>
    <Reference Include="System.Web.HttpUtility">
      <HintPath>C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.netcore.app\2.0.0\ref\netcoreapp2.0\System.Web.HttpUtility.dll</HintPath>
    </Reference>
  </ItemGroup>-->
  <ItemGroup>
    <Folder Include="NeuralSystems\Nodes\Config\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="7.0.0" />
    <PackageReference Include="Senparc.CO2NET" Version="2.3.1.1-7.0" />
    <PackageReference Include="Senparc.CO2NET.APM" Version="1.4.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' != 'net462'">
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions">
      <Version>6.0.0</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Update="Microsoft.SourceLink.GitHub" Version="1.1.1" />
  </ItemGroup>
</Project>